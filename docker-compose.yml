services:
  volume-init:
    image: alpine
    user: root
    command: sh -c "rm -rf /var/shared-data/* || true"
    volumes:
      - shared-data:/var/shared-data:volume-nocopy
  jenkins-docker:
    image: docker:dind
    container_name: jenkins-docker
    privileged: true
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    volumes:
      - jenkins-docker-certs:/certs/client
      - jenkins-data:/var/jenkins_home
    ports:
      - "2376:2376"
    networks:
      jenkins:
        aliases:
          - docker
    command: --storage-driver overlay2

  my-jenkins:
    image: my-jenkins
    build:
      context: .
    container_name: my-jenkins
    restart: no
    healthcheck:
        test: ["CMD-SHELL", "test -f /tmp/keyisset -a -f /var/shared-data/id_ed25519.pub"]
        interval: 3s
        timeout: 3s
        retries: 10   
        start_period: 5s
    environment:
      - DOCKER_HOST=tcp://docker:2376
      - DOCKER_CERT_PATH=/certs/client
      - DOCKER_TLS_VERIFY=1
    volumes:
      - shared-data:/var/shared-data:volume-nocopy
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client:ro
    ports:
      - "8080:8080"
      - "50000:50000"
    networks:
      - jenkins
    depends_on:
            volume-init:
                condition: service_completed_successfully
    
  deploy-server:
    image: deploy-server
    build:
      context: .
      dockerfile: deploy-server.Dockerfile
    container_name: deploy-server
    command: sh -c "cat /var/shared-data/id_ed25519.pub > /root/.ssh/authorized_keys && service ssh restart && sleep infinity"
    environment:
      - DOCKER_HOST=tcp://docker:2376
      - DOCKER_CERT_PATH=/certs/client
      - DOCKER_TLS_VERIFY=1
    volumes:
      - shared-data:/var/shared-data:volume-nocopy
      - jenkins-docker-certs:/certs/client:ro
    networks:
      - jenkins
    depends_on:
            my-jenkins:
                condition: service_healthy
                restart: true
            volume-init:
                condition: service_completed_successfully

networks:
  jenkins:
    driver: bridge

volumes:
  jenkins-docker-certs:
  jenkins-data:
  deploy-server-docker-certs:
  shared-data: